@model PaginatedProductModel

@{
    ViewData["Title"] = "Manage Products";
}

<h1>Manage Products</h1>
    
<div class="d-flex flex-row justify-content-end">
    <a asp-action="AddProductPage" class="btn btn-warning">Add Product</a>
</div>

<!-- Display List of Products -->
<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
            <th>Price</th>
            <th>Stock Quantity</th>
            <th>Category</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in Model.Products)
        {
            <tr>
                <td>@product.Name</td>
                <td>@product.Description</td>
                <td>@product.Price</td>
                <td>@product.StockQuantity</td>
                <td>@product.Category</td>
                <td>
                    <a asp-controller="Products"asp-action="EditProductPage" asp-route-id="@product.Id" class="btn btn-warning">Edit</a>
                    <form asp-action="DeleteProduct" asp-route-id="@product.Id" method="post" style="display:inline;">
                        <button type="submit" class="btn btn-danger">Delete</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination Controls -->
<div>
    @if (Model.CurrentPage > 1)
    {
        <a asp-action="ProductsPage" asp-route-page="@(Model.CurrentPage - 1)" class="btn btn-primary">&lt; Previous</a>
    }

    <span>Page @Model.CurrentPage of @Model.TotalPages</span>

    @if (Model.CurrentPage < Model.TotalPages)
    {
        <a asp-action="ProductsPage" asp-route-page="@(Model.CurrentPage + 1)" class="btn btn-primary">Next &gt;</a>
    }
</div>


