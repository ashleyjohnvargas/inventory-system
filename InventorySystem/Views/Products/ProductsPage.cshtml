@model PaginatedProductModel

@{
    ViewData["Title"] = "Manage Products";
}

<!-- Include CSS files -->
<link rel="stylesheet" href="~/css/productspage.css" asp-append-version="true" />

<!-- Page Header with Go Back Icon -->
<div class="d-flex align-items-center mb-4" style="width: 1000px; margin: 30px 0 0 26px; align-items:center;">
    <a asp-action="Index" asp-controller="Dashboard" class="text-decoration-none me-3 text-dark" title="Go Back">
        <i class="fa-solid fa-arrow-left fs-3"></i>
    </a>
    <h1 class="mb-0 fw-bold" style="color: #343a40; font-size: 28px; margin:0;">Manage Products</h1>
</div>

<!-- Success Message Alert -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="close" data-bs-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

<div class="d-flex flex-row justify-content-end mb-3" style="width: 1076px; margin-left: 75px;">
    <a asp-action="AddProductPage" class="btn btn-success"><i class="fa-solid fa-plus-circle"></i> Add Product</a>
</div>

<!-- Centered Table Container with Animation -->
<div class="table-container">
    <table class="table table-striped table-bordered table-hover">
        <thead class="table-dark">
            <tr>
                <th>Name</th>
                <th class="description-column">Description</th>
                <th>Price</th>
                <th>Stock Quantity</th>
                <th>Category</th>
                <th>Date Added</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in Model.Products)
            {
                <tr>
                    <td>@product.Name</td>
                    <td class="description-column">@product.Description</td>
                    <td>@string.Format("{0:C}", product.Price)</td>
                    <td>@product.StockQuantity</td>
                    <td>@product.Category</td>
                    <td>@product.DateAdded.ToString("yyyy-MM-dd")</td>
                    <td class="action-container">
                         <!-- Edit Button with Pencil Icon -->
                        <a asp-controller="Products" asp-action="EditProductPage" asp-route-id="@product.Id" class="btn btn-warning action-butt">
                            <i class="fa-solid fa-pencil-alt cust-icon"></i>
                        </a>
                        
                        <!-- Delete Button with Trash Icon -->
                        <form asp-action="DeleteProduct" asp-route-id="@product.Id" method="post" class="d-inline" style="margin-left: 2px;">
                            <button type="submit" class="btn btn-danger btn-sm">
                                <i class="fa-solid fa-trash cust-icon"></i> 
                            </button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Pagination Controls -->
<div class="d-flex justify-content-between align-items-center" style="margin-bottom: 50px;">
    @if (Model.CurrentPage > 1)
    {
        <a asp-action="ProductsPage" asp-route-page="@(Model.CurrentPage - 1)" class="btn btn-success btn-sm">&lt; Previous</a>
    }

    <span>Page @Model.CurrentPage of @Model.TotalPages</span>

    @if (Model.CurrentPage < Model.TotalPages)
    {
        <a asp-action="ProductsPage" asp-route-page="@(Model.CurrentPage + 1)" class="btn btn-success btn-sm">Next &gt;</a>
    }
</div>

@section Scripts {
    <script>
        // Function to adjust the margin-bottom based on the table container's height
        function adjustTableMargin() {
            var tableContainer = document.querySelector('.table-container');
            var containerHeight = tableContainer.offsetHeight;

            if (containerHeight < 820) {
                // Decrease height by 50-70px and add margin-bottom
                var marginBottom = Math.floor((820 - containerHeight) / 50) * 50; // Increment margin in steps of 50px
                tableContainer.style.marginBottom = Math.max(marginBottom, 50) + "px"; // Minimum margin of 50px
            }
        }

        // Adjust margin on initial load
        adjustTableMargin();

        // Adjust margin on window resize
        window.addEventListener('resize', adjustTableMargin);
    </script>
}
